"""crear tabla cambios_correo_pendiente

Revision ID: 0a4366afdf3a
Revises: 4450565713e1
Create Date: 2025-05-22 11:54:33.104454

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0a4366afdf3a'
down_revision: Union[str, None] = '4450565713e1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_intercambios_idIntercambio', table_name='intercambios')
    op.drop_table('intercambios')
    op.create_foreign_key(None, 'libros', 'categorias', ['idCategoria'], ['idCategoria'])
    op.create_foreign_key(None, 'solicitudes', 'libros', ['libroSolicitado'], ['idLibro'])
    op.create_foreign_key(None, 'solicitudes', 'libros', ['libroOfrecido'], ['idLibro'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'solicitudes', type_='foreignkey')
    op.drop_constraint(None, 'solicitudes', type_='foreignkey')
    op.drop_constraint(None, 'libros', type_='foreignkey')
    op.create_table('intercambios',
    sa.Column('idIntercambio', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('idSolicitud', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idEstudiante', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idEstudianteReceptor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idLibroOfrecido', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('idLibroSolicitado', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fechaEncuentro', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('horaEncuentro', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('lugarEncuentro', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('estado', postgresql.ENUM('en_proceso', 'finalizado', 'cancelado', name='estadointercambioenum'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idEstudiante'], ['estudiantes.idEstudiante'], name='intercambios_idEstudiante_fkey'),
    sa.ForeignKeyConstraint(['idEstudianteReceptor'], ['estudiantes.idEstudiante'], name='intercambios_idEstudianteReceptor_fkey'),
    sa.ForeignKeyConstraint(['idLibroOfrecido'], ['libros.idLibro'], name='intercambios_idLibroOfrecido_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idLibroSolicitado'], ['libros.idLibro'], name='intercambios_idLibroSolicitado_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['idSolicitud'], ['solicitudes.idSolicitud'], name='intercambios_idSolicitud_fkey'),
    sa.PrimaryKeyConstraint('idIntercambio', name='intercambios_pkey')
    )
    op.create_index('ix_intercambios_idIntercambio', 'intercambios', ['idIntercambio'], unique=False)
    # ### end Alembic commands ###
